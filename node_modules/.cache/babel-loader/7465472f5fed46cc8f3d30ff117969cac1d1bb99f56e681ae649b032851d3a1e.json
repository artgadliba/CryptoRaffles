{"ast":null,"code":"var _jsxFileName = \"/Users/a.gadliba/Downloads/cryptoraffles-3/src/pages/Index/components/IndexList/IndexList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { IndexListBlock, IndexListItemArrow, IndexListItemArrowHorizontalLine, IndexListItemArrowVerticalLine, IndexListItemBlock, IndexListItemContent, IndexListItemHeader, IndexListItemText, IndexListItemTitle } from \"./IndexListStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndexListItem = _ref => {\n  _s();\n  let {\n    title,\n    text\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(IndexListItemBlock, {\n    isOpen: isOpen,\n    onClick: () => setIsOpen(prev => !prev),\n    children: [/*#__PURE__*/_jsxDEV(IndexListItemHeader, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(IndexListItemTitle, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IndexListItemArrow, {\n        isOpen: isOpen,\n        children: [/*#__PURE__*/_jsxDEV(IndexListItemArrowHorizontalLine, {\n          alt: \"horizontal-line\",\n          src: \"/images/horizontal-line.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), !isOpen && /*#__PURE__*/_jsxDEV(IndexListItemArrowVerticalLine, {\n          alt: \"vertical-line\",\n          src: \"/images/vertical-line.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IndexListItemContent, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(IndexListItemText, {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(IndexListItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = IndexListItem;\nconst IndexList = _ref2 => {\n  let {\n    items\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(IndexListBlock, {\n    children: items.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(IndexListItem, {\n        title: item.title,\n        text: item.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = IndexList;\nexport default IndexList;\nvar _c, _c2;\n$RefreshReg$(_c, \"IndexListItem\");\n$RefreshReg$(_c2, \"IndexList\");","map":{"version":3,"names":["React","useState","IndexListBlock","IndexListItemArrow","IndexListItemArrowHorizontalLine","IndexListItemArrowVerticalLine","IndexListItemBlock","IndexListItemContent","IndexListItemHeader","IndexListItemText","IndexListItemTitle","jsxDEV","_jsxDEV","IndexListItem","_ref","_s","title","text","isOpen","setIsOpen","onClick","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","_c","IndexList","_ref2","items","map","item","idx","_c2","$RefreshReg$"],"sources":["/Users/a.gadliba/Downloads/cryptoraffles-3/src/pages/Index/components/IndexList/IndexList.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { IndexListBlock, IndexListItemArrow, IndexListItemArrowHorizontalLine, IndexListItemArrowVerticalLine, IndexListItemBlock, IndexListItemContent, IndexListItemHeader, IndexListItemText, IndexListItemTitle } from \"./IndexListStyles\";\r\n\r\ninterface IIndexListItem {\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\ninterface IIndexList {\r\n  items: IIndexListItem[];\r\n}\r\n\r\nconst IndexListItem: FC<IIndexListItem> = ({ title, text }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <IndexListItemBlock isOpen={isOpen} onClick={() => setIsOpen((prev) => !prev)}>\r\n      <IndexListItemHeader isOpen={isOpen}>\r\n        <IndexListItemTitle>{title}</IndexListItemTitle>\r\n        <IndexListItemArrow isOpen={isOpen}>\r\n          <IndexListItemArrowHorizontalLine alt=\"horizontal-line\" src=\"/images/horizontal-line.svg\" />\r\n          {!isOpen && <IndexListItemArrowVerticalLine alt=\"vertical-line\" src=\"/images/vertical-line.svg\" />}\r\n        </IndexListItemArrow>\r\n      </IndexListItemHeader>\r\n      <IndexListItemContent>{isOpen && <IndexListItemText>{text}</IndexListItemText>}</IndexListItemContent>\r\n    </IndexListItemBlock>\r\n  );\r\n};\r\n\r\nconst IndexList: FC<IIndexList> = ({ items }) => {\r\n  return (\r\n    <IndexListBlock>\r\n      {items.map((item, idx) => {\r\n        return <IndexListItem title={item.title} text={item.text} key={idx} />;\r\n      })}\r\n    </IndexListBlock>\r\n  );\r\n};\r\n\r\nexport default IndexList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,EAAEC,kBAAkB,EAAEC,gCAAgC,EAAEC,8BAA8B,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW/O,MAAMC,aAAiC,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAH,IAAA;EACxD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3C,oBACEW,OAAA,CAACN,kBAAkB;IAACY,MAAM,EAAEA,MAAO;IAACE,OAAO,EAAEA,CAAA,KAAMD,SAAS,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAE;IAAAC,QAAA,gBAC5EV,OAAA,CAACJ,mBAAmB;MAACU,MAAM,EAAEA,MAAO;MAAAI,QAAA,gBAClCV,OAAA,CAACF,kBAAkB;QAAAY,QAAA,EAAEN;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAsB,eAChDd,OAAA,CAACT,kBAAkB;QAACe,MAAM,EAAEA,MAAO;QAAAI,QAAA,gBACjCV,OAAA,CAACR,gCAAgC;UAACuB,GAAG,EAAC,iBAAiB;UAACC,GAAG,EAAC;QAA6B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EAC3F,CAACR,MAAM,iBAAIN,OAAA,CAACP,8BAA8B;UAACsB,GAAG,EAAC,eAAe;UAACC,GAAG,EAAC;QAA2B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACtBd,OAAA,CAACL,oBAAoB;MAAAe,QAAA,EAAEJ,MAAM,iBAAIN,OAAA,CAACH,iBAAiB;QAAAa,QAAA,EAAEL;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAqB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAwB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnF;AAEzB,CAAC;AAACX,EAAA,CAdIF,aAAiC;AAAAgB,EAAA,GAAjChB,aAAiC;AAgBvC,MAAMiB,SAAyB,GAAGC,KAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,KAAA;EAC1C,oBACEnB,OAAA,CAACV,cAAc;IAAAoB,QAAA,EACZU,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACxB,oBAAOvB,OAAA,CAACC,aAAa;QAACG,KAAK,EAAEkB,IAAI,CAAClB,KAAM;QAACC,IAAI,EAAEiB,IAAI,CAACjB;MAAK,GAAMkB,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IACxE,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAErB,CAAC;AAACU,GAAA,GARIN,SAAyB;AAU/B,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}